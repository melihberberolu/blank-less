//
// Grid system
// --------------------------------------------------


// Container widths
//
// Set the container width, and override it for fixed navbars in media queries.


.container {
  .container-fixed();

  @media (max-width: @screen-sm-min) {
    min-width: 320px;
    max-width: 100%;
  }
  @media (min-width: @screen-sm-min) {
    width: @container-sm;
  }
  @media (min-width: @screen-md-min) {
    width: @container-md;
  }
  @media (min-width: @screen-lg-min) {
    width: @container-lg;
  }
  & when (@is-extra-large-active = true) {
    @media (min-width: @screen-xl-min) {
      width: @container-xl;
    }
  }
}


// Fluid container
//
// Utilizes the mixin meant for fixed width containers, but without any defined
// width for fluid, full width layouts.

.container-fluid {
  .container-fixed();
  & when (@is-extra-large-active = false) {
    @media (min-width: @screen-lg-min) {
      max-width: 1340px;
    }
  }
  & when (@is-extra-large-active = true) {
    @media (min-width: @screen-xl-min) {
      max-width: 1720px;
    }
  }
}


// Row
//
// Rows contain and clear the floats of your columns.

.row {
  .make-row();
  // paddless row
  &.row-paddless {
    margin-left: 0;
    margin-right: 0;
    > [class*=col-] {
      padding-left: 0;
      padding-right: 0;
    }
  }
  &.row-pad-5 {
    margin-left: -5px;
    margin-right: -5px;
    > [class*=col-] {
      padding-left: 5px;
      padding-right: 5px;
    }
  }
  &.row-pad-10 {
    margin-left: -10px;
    margin-right: -10px;
    > [class*=col-] {
      padding-left: 10px;
      padding-right: 10px;
    }
  }
  &.row-pad-20 {
    margin-left: -20px;
    margin-right: -20px;
    > [class*=col-] {
      padding-left: 20px;
      padding-right: 20px;
    }
  }
}



// Columns
//
// Common styles for small and large grid columns

.make-grid-columns();


// Extra small grid
//
// Columns, offsets, pushes, and pulls for extra small devices like
// smartphones.

.make-grid(xs);


// Small grid
//
// Columns, offsets, pushes, and pulls for the small device range, from phones
// to tablets.

@media (min-width: @screen-sm-min) {
  .make-grid(sm);
}


// Medium grid
//
// Columns, offsets, pushes, and pulls for the desktop device range.

@media (min-width: @screen-md-min) {
  .make-grid(md);
}


// Large grid
//
// Columns, offsets, pushes, and pulls for the large desktop device range.

@media (min-width: @screen-lg-min) {
  .make-grid(lg);
}


// Extra Large grid
//
// Columns, offsets, pushes, and pulls for the extra large desktop device range.
& when (@is-extra-large-active = true) {
  @media (min-width: @screen-xl-min) {
    .make-grid(xl);
  }
}