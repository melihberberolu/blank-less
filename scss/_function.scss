////////////
// prefix //
////////////
@mixin prefix($property, $value) {
  -webkit-#{$property}: $value;
     -moz-#{$property}: $value;
      -ms-#{$property}: $value;
       -o-#{$property}: $value;
          #{$property}: $value;
}




// cross browser
@mixin browser($browser: Mozilla) {
  body[data-browser*="#{$browser}"] & {
    @content;
  }
}



/////////////
// loading //
/////////////
@mixin loading($width: 36px, $height: 36px, $color:red, $duration: 0.7s, $bg-color:rgba(0,0,0,.1), $border: 3px) {
  &:after {
    content: "";
    margin: 0;
    font-size: 0.4em;
    position: absolute;
    text-indent: -9999em;
    border-top: $border solid rgba(0, 0, 0, 0.1);
    border-right: $border solid rgba(0, 0, 0, 0.1);
    border-bottom: $border solid rgba(0, 0, 0, 0.1);
    border-left: $border solid $color;
    @include prefix(animation, spin $duration infinite linear);
    border-radius: 50%;
    width: $width;
    height: $height;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    margin: auto;
  }
}


/////////
// dim //
/////////
@mixin dim($color: rgba(255,255,255,0.6)) {
  position: relative;
  &:before {
    content: "";
    width: 100%;
    height: 100%;
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    background-color: $color;
    z-index: 110;
  }
}





//=========================================
//              BUTTON THEMES             =
//=========================================
@mixin button-theme($text-color, $bg-color, $border-color, $text-hover-color, $bg-hover-color, $border-hover-color, $text-active-color, $bg-active-color, $border-active-color ) {
  color: $text-color;
  background-color: $bg-color;
  border-color: $border-color;
  &.hover,
  &:hover {
    color: $text-hover-color;
    background-color: $bg-hover-color;
    border-color: $border-hover-color;
  }
  &:focus,
  &.focus,
  &:active,
  &.active {
    // color: $text-active-color;
    background-color: $bg-active-color;
    border-color: $border-active-color;
  }
}

@mixin button-darken($color) {
  color: #fff;
  background-color: $color;
  &.hover,
  &:hover {
    background-color: darken($color, 20%);
  }
  &.focus,
  &:focus,
  &:active,
  &.active {
    background-color: lighten($color, 20%);
  }
}

@mixin button-lighten($color) {
  color: #fff;
  background-color: $color;
  &.hover,
  &:hover {
    background-color: lighten($color, 20%);
  }
  &.focus,
  &:focus,
  &:active,
  &.active {
    background-color: darken($color, 20%);
  }
}
//--------  End of button themes  ---------//




////////////////
//transitions //
////////////////
@mixin trans($duration :0.1s ) {
  @include prefix(transition, all $duration linear);
}
@mixin transition($value) {
  @include prefix(transition, $value);
}
@mixin trans-delay($delay1 :0.1s) {
  @include prefix(transition-delay, $delay1);
}
///////////////
// animation //
///////////////
@mixin animation($keyframe_name, $duration, $ease) {
  @include prefix(animation, $keyframe_name $duration $ease);
}

/////////////
//clearfix //
/////////////
@mixin clear-after() {
  &:after {
    content: "";
    display: block;
    visibility: hidden;
    clear:both;
  }
}
@mixin clear-before() {
  &:before {
    content: "";
    display: block;
    visibility: hidden;
    clear:both;
  }
}
@mixin clearfix() {
  @include clear-after();
  @include clear-before();
}

//////////////////////
// Placeholder text //
//////////////////////
@mixin placeholder($color: #BFBFBF) {
  &:-moz-placeholder            { color: $color; }
  &::-moz-placeholder           { color: $color; }
  &:-ms-input-placeholder       { color: $color; }
  &::-webkit-input-placeholder  { color: $color; }
  &::placeholder                { color: $color; }
}




@mixin opacity($opacity) {
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=#{$opacity*100})";
    filter: alpha(opacity=( $opacity * 100 ));
    -moz-opacity: $opacity;
    -khtml-opacity: $opacity;
    opacity: $opacity;
}





@mixin selected($color, $background) {
  &::selection {
    background: $background;
    color: $color;
  }
  &::-moz-selection {
    background: $background;
    color: $color;
  }
}





/////////
//font //
/////////
@mixin f1() { font-family: $font1; }
@mixin f2() { font-family: $font2; }
@mixin f3() { font-family: $font3; }
@mixin f4() { font-family: $font4; }
@mixin f5() { font-family: $font5; }




////////////////
// custom css //
////////////////
@mixin mp0() {
  margin: 0;
  padding: 0;
}
@mixin btn() {
  background-color: transparent;
  border:0;
  outline:none;
  margin: 0;
  padding: 0;
}
@mixin tr() {
  border:0;
  outline:none;
  background-color: transparent;
  margin: 0;
  padding: 0;
}
@mixin full() {
  width: 100%;
  height: 100%;
  display: block;
}
@mixin absolute() {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  margin: auto;
}







///////////////
// Transform //
///////////////
@mixin rotate($degrees) {
  @include prefix(transform, rotate($degrees));;
}

@mixin scale($ratio) {
  @include prefix(transform, scale($ratio));
}

@mixin translate($x, $y) {
  @include prefix(transform, translate($x, $y));
}

@mixin skew($x, $y) {
  @include prefix(transform, skew($x, $y));
}

@mixin translate3d($x, $y, $z) {
  @include prefix(transform, translate3d($x, $y, $z));
}

@mixin rotateX($degrees) {
  @include prefix(transform, rotateX($degrees));
}

@mixin rotateY($degrees) {
  @include prefix(transform, rotateY($degrees));
}




//===================================
//              FLEXBOX             =
//===================================

// flex container
@mixin flex-display() {
  display: -webkit-box;
  display: -moz-box;
  display: box;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox; // 2011 (IE 10)
  display: flex;
}
@mixin flex-display-inline() {
  display: -webkit-inline-box;
  display: -moz-inline-box;
  display: inline-box;
  display: -webkit-inline-flex;
  display: -moz-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
}
@mixin flex-direction($value) {
  -webkit-flex-direction: $value;
      -ms-flex-direction: $value;
          flex-direction: $value;
}
@mixin flex-wrap($value) {
  -webkit-flex-wrap: $value;
      -ms-flex-wrap: $value;
          flex-wrap: $value;
}
@mixin flex-justify-content($value) {
  -webkit-justify-content: $value;
            -ms-flex-pack: $value;
          justify-content: $value;
}
@mixin flex-align-items($value) {
  -webkit-align-items: $value;
    -webkit-box-align: $value;
       -ms-flex-align: $value;
       -moz-box-align: $value;
          align-items: $value;
}
@mixin flex-align-content($value) {
  -webkit-align-content: $value;
     -ms-flex-line-pack: $value;
          align-content: $value;
}

// flex items
@mixin flex($value) {
  -webkit-box-flex: $value;
     -moz-box-flex: $value;
      -webkit-flex: $value;
          -ms-flex: $value;
              flex: $value;
}
@mixin flex-order($value) {
  -webkit-box-ordinal-group: $value;
     -moz-box-ordinal-group: $value;
             -ms-flex-order: $value;
              -webkit-order: $value;
                      order: $value;
}
@mixin flex-align-self($value) {
  -ms-flex-item-align: $value;
   -webkit-align-self: $value;
           align-self: $value;
}
//--------  End of flexbox  ---------//



//==================================
//              COLUMN             =
//==================================
@mixin columns($args) {
    -webkit-columns: $args;
    -moz-columns: $args;
    columns: $args;
}
@mixin column-count($count) {
    -webkit-column-count: $count;
    -moz-column-count: $count;
    column-count: $count;
}
@mixin column-gap($gap) {
    -webkit-column-gap: $gap;
    -moz-column-gap: $gap;
    column-gap: $gap;
}
@mixin column-width($width) {
    -webkit-column-width: $width;
    -moz-column-width: $width;
    column-width: $width;
}
@mixin column-rule($args) {
    -webkit-column-rule: $args;
    -moz-column-rule: $args;
    column-rule: $args;
}
//--------  End of column  ---------//





///////////////
// selection //
///////////////
@mixin selection($text-color, $background-color) {
  &::-moz-selection {color: $text-color; background-color: $background-color;}
  &::selection {color: $text-color; background-color: $background-color;}
}






// keyframes
@mixin keyframes($anim-name) {
  @-moz-keyframes #{$anim-name} {
    @content;
  }
  @-webkit-keyframes #{$anim-name} {
    @content;
  }
  @-o-keyframes #{$anim-name} {
    @content;
  }
  @-ms-keyframes #{$anim-name} {
    @content;
  }
  @keyframes #{$anim-name} {
    @content;
  }
}