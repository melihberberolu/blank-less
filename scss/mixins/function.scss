// cross browser




/////////////
// loading //
/////////////
@mixin loading($width: 36px, $height: 36px, $color:red, $duration: 0.7s, $bg-color:rgba(0,0,0,.1), $border: 3px) {
  &:after {
    content: "";
    margin: 0;
    font-size: 0.4em;
    position: absolute;
    text-indent: -9999em;
    border-top: $border solid rgba(0, 0, 0, 0.1);
    border-right: $border solid rgba(0, 0, 0, 0.1);
    border-bottom: $border solid rgba(0, 0, 0, 0.1);
    border-left: $border solid $color;
    @include prefix(animation, spin $duration infinite linear);
    border-radius: 50%;
    width: $width;
    height: $height;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    margin: auto;
  }
}


/////////
// dim //
/////////
@mixin dim($color: rgba(255,255,255,0.6)) {
  position: relative;
  &:before {
    content: "";
    width: 100%;
    height: 100%;
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    background-color: $color;
    z-index: 110;
  }
}





//=========================================
//              BUTTON THEMES             =
//=========================================

//--------  End of button themes  ---------//




////////////////
//transitions //
////////////////
@mixin trans($duration :0.1s ) {
  @include prefix(transition, all $duration linear);
}
@mixin transition($value) {
  @include prefix(transition, $value);
}
@mixin trans-delay($delay1 :0.1s) {
  @include prefix(transition-delay, $delay1);
}
///////////////
// animation //
///////////////
@mixin animation($keyframe_name, $duration, $ease) {
  @include prefix(animation, $keyframe_name $duration $ease);
}


//////////////////////
// Placeholder text //
//////////////////////
@mixin placeholder($color: #BFBFBF) {
  &:-moz-placeholder            { color: $color; }
  &::-moz-placeholder           { color: $color; }
  &:-ms-input-placeholder       { color: $color; }
  &::-webkit-input-placeholder  { color: $color; }
  &::placeholder                { color: $color; }
}




@mixin opacity($opacity) {
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=#{$opacity*100})";
    filter: alpha(opacity=( $opacity * 100 ));
    -moz-opacity: $opacity;
    -khtml-opacity: $opacity;
    opacity: $opacity;
}





@mixin selection($color, $background) {
  &::selection {
    background: $background;
    color: $color;
  }
  &::-moz-selection {
    background: $background;
    color: $color;
  }
}





/////////
//font //
/////////
@mixin f1() { font-family: $font1; }
@mixin f2() { font-family: $font2; }
@mixin f3() { font-family: $font3; }
@mixin f4() { font-family: $font4; }
@mixin f5() { font-family: $font5; }




////////////////
// custom css //
////////////////
@mixin mp0() {
  margin: 0;
  padding: 0;
}
@mixin btn() {
  background-color: transparent;
  border:0;
  outline:none;
  margin: 0;
  padding: 0;
}
@mixin tr() {
  border:0;
  outline:none;
  background-color: transparent;
  margin: 0;
  padding: 0;
}
@mixin full() {
  width: 100%;
  height: 100%;
  display: block;
}
@mixin absolute() {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  margin: auto;
}







///////////////
// Transform //
///////////////
@mixin rotate($degrees) {
  @include prefix(transform, rotate($degrees));;
}

@mixin scale($ratio) {
  @include prefix(transform, scale($ratio));
}

@mixin translate($x, $y) {
  @include prefix(transform, translate($x, $y));
}

@mixin skew($x, $y) {
  @include prefix(transform, skew($x, $y));
}

@mixin translate3d($x, $y, $z) {
  @include prefix(transform, translate3d($x, $y, $z));
}

@mixin rotateX($degrees) {
  @include prefix(transform, rotateX($degrees));
}

@mixin rotateY($degrees) {
  @include prefix(transform, rotateY($degrees));
}







//==================================
//              COLUMN             =
//==================================
@mixin columns($args) {
    -webkit-columns: $args;
    -moz-columns: $args;
    columns: $args;
}
@mixin column-count($count) {
    -webkit-column-count: $count;
    -moz-column-count: $count;
    column-count: $count;
}
@mixin column-gap($gap) {
    -webkit-column-gap: $gap;
    -moz-column-gap: $gap;
    column-gap: $gap;
}
@mixin column-width($width) {
    -webkit-column-width: $width;
    -moz-column-width: $width;
    column-width: $width;
}
@mixin column-rule($args) {
    -webkit-column-rule: $args;
    -moz-column-rule: $args;
    column-rule: $args;
}
//--------  End of column  ---------//



















// hidden visually
@mixin hidden-visually {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}
%hidden-visually {
  @include hidden-visually;
}







// image replace
@mixin img-replace {
  text-indent: 102%;
  white-space: nowrap;
  overflow: hidden;
  padding: 0;

}
%img-replace {
  @include img-replace;
}